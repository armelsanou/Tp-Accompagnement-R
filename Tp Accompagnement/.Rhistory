runApp('Origine/HR-Analytics-main/projet_fin.R')
runApp('projet_fin.R')
runApp('projet_fin.R')
runApp('projet_fin.R')
runApp('Origine/HR-Analytics-main/projet_fin.R')
runApp('Origine/HR-Analytics-main/projet_fin.R')
runApp('projet_fin.R')
runApp('Origine/HR-Analytics-main/projet_fin.R')
runApp('projet_fin.R')
runApp('Origine/HR-Analytics-main/projet_fin.R')
runApp('Origine/HR-Analytics-main/projet_fin.R')
runApp('projet_fin.R')
runApp('projet_fin.R')
runApp('Origine/HR-Analytics-main/projet_fin.R')
runApp('projet_fin.R')
runApp('projet_fin.R')
runApp('projet_fin.R')
runApp('projet_fin.R')
runApp('Origine/HR-Analytics-main/projet_fin.R')
runApp('projet_fin.R')
runApp('Origine/HR-Analytics-main/projet_fin.R')
runApp('Origine/HR-Analytics-main/projet_fin.R')
runApp('Origine/HR-Analytics-main/projet_fin.R')
runApp('projet_fin.R')
runApp('Origine/HR-Analytics-main/projet_fin.R')
runApp('Origine/HR-Analytics-main/projet_fin.R')
runApp('Origine/HR-Analytics-main/projet_fin.R')
library(shiny); runApp('Origine/HR-Analytics-main/projet_fin.R')
runApp('projet_fin.R')
runApp('projet_fin.R')
runApp('Origine/HR-Analytics-main/projet_fin.R')
runApp('Origine/HR-Analytics-main/projet_fin.R')
runApp('Origine/HR-Analytics-main/projet_fin.R')
runApp('projet_fin.R')
runApp('Origine/HR-Analytics-main/projet_fin.R')
library(shiny); runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
library(shiny); runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
if
new_row["no cde Sortie"] <- givenDataFrame[i, "N..évènement"]
library(shiny); runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('projet_fin.R')
runApp('projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('projet_fin.R')
runApp('projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
View(tempdF)
View(tempdF)
View(tempdF)
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
library(shiny); runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
library(shiny); runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
remotes::install_github("dreamRs/capture")
install_github("dreamRs/capture")
install_github("dreamRs/capture")
githubinstall("dreamRs/capture")
library(githubinstall)
githubinstall("dreamRs/capture")
runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
install.packages("remotes")
install.packages("remotes")
remotes::install_github("dreamRs/capture")
library(shiny); runApp('GitHub/declaration-automation-base-on-R/projet_fin.R')
library(FactoMineR)
library(Factoshiny)
data = read.table("/data_suicide")
print(getwd())
data = read.table("/data_suicide")
print(getwd())
data = read.table(paste0(getwd(),"/",data_suicide))
print(getwd())
data = read.table(paste0(getwd(),"/","data_suicide"))
data
print(getwd())
data = read.table(paste0(getwd(),"/","data_suicide"), header = TRUE)
data
print(getwd())
data = read.table(paste0(getwd(),"/","data_suicide"), header = TRUE)
data
res.ca = CA(data, nrow(data))
print(getwd())
data = read.table(paste0(getwd(),"/","data_suicide"), header = TRUE)
print(data[2, ])
res.ca = CA(data, nrow(data))
print(getwd())
data = read.table(paste0(getwd(),"/","data_suicide"), header = TRUE)
print(data[2:, ])
print(getwd())
data = read.table(paste0(getwd(),"/","data_suicide"), header = TRUE)
print(data[,2:nrow(data) ])
print(getwd())
data = read.table(paste0(getwd(),"/","data_suicide"), header = TRUE)
print(data[2:nrow(data)])
print(getwd())
data = read.table(paste0(getwd(),"/","data_suicide"), header = TRUE)
print(data[2:10])
print(getwd())
data = read.table(paste0(getwd(),"/","data_suicide"), header = TRUE)
print(data[2:10,])
res.ca = CA(data, nrow(data))
print(getwd())
data = read.table(paste0(getwd(),"/","data_suicide"), header = TRUE)
print(data[,2:10])
print(getwd())
data = read.table(paste0(getwd(),"/","data_suicide"), header = TRUE)
print(data[2::])
print(getwd())
data = read.table(paste0(getwd(),"/","data_suicide"), header = TRUE)
print(data[,-1])
res.ca = CA(data, nrow(data))
print(getwd())
data = read.table(paste0(getwd(),"/","data_suicide"), header = TRUE)
data = data[,-1]
res.ca = CA(data, nrow(data))
res.hcpc.col = HCPC(res.ca$col)
library(Factoshiny)
library(tidyverse)
dat <- dat %>% column_to_rownames(., var = 'Sexe.Age')
library(Factoshiny)
library(tidyverse)
print(getwd())
data = read.table(paste0(getwd(),"/","data_suicide"), header = TRUE)
data <- data %>% column_to_rownames(., var = 'Sexe.Age')
data = data[,-1]
res.ca = CA(data, nrow(data))
res.hcpc.col = HCPC(res.ca$col)
print(getwd())
data = read.table(paste0(getwd(),"/","data_suicide"), header = TRUE)
data <- data %>% column_to_rownames(., var = 'Sexe.Age')
data = data[,-1]
res.ca = CA(data, nrow(data))
res.hcpc.col = HCPC(res.ca$col)
print(getwd())
data = read.table(paste0(getwd(),"/","data_suicide"), header = TRUE)
data <- data %>% column_to_rownames(., var = 'Sexe.Age')
data = data[,-1]
res.ca = CA(data)
res.hcpc.col = HCPC(res.ca$col)
print(getwd())
data = read.table(paste0(getwd(),"/","data_suicide"), header = TRUE)
data <- data %>% column_to_rownames(., var = 'Sexe.Age')
data = data[,-1]
res.ca = CA(data)
res.ca$col
res.hcpc.col = HCPC(res.ca$col)
print(getwd())
data = read.table(paste0(getwd(),"/","data_suicide"), header = TRUE)
data <- data %>% column_to_rownames(., var = 'Sexe.Age')
data = data[,-1]
res = factoshiny(data)
print(getwd())
data = read.table(paste0(getwd(),"/","data_suicide"), header = TRUE)
data <- data %>% column_to_rownames(., var = 'Sexe.Age')
data = data[,-1]
res = Factoshiny(data)
print(getwd())
data = read.table(paste0(getwd(),"/","data_suicide"), header = TRUE)
data <- data %>% column_to_rownames(., var = 'Sexe.Age')
data = data[,-1]
res = Factoshiny(data)
#res.ca$col
#res.hcpc.col = HCPC(res.ca$col)
#res.hcpc.ind = HCPC(res.ca$row)
#res.hcpc = HCPC(res.ca,t.levels="all")
#res.ca$col
print(getwd())
data = read.table(paste0(getwd(),"/","data_suicide"), header = TRUE)
data <- data %>% column_to_rownames(., var = 'Sexe.Age')
data = data[,-1]
res = Factoshiny(data)
shiny::runApp('GitHub/Tp-Accompagnement-R/Tp Accompagnement')
runApp('GitHub/Tp-Accompagnement-R/Tp Accompagnement')
runApp('GitHub/Tp-Accompagnement-R/Tp Accompagnement')
shiny::runApp('GitHub/Tp-Accompagnement-R/Tp Accompagnement')
